{"version":3,"file":"index.modern.js","sources":["../src/_next.js","../src/next.js"],"sourcesContent":["/**\n * Returns the next event of the input iterator.\n *\n * @param {Iterator} iterator - The input iterator.\n * @returns {{value: any, done?: boolean}}\n */\nconst _next = (iterator) => iterator.next();\nexport default _next;\n","import StopIteration from './StopIteration.js';\nimport _next from './_next.js';\n\n/**\n * Returns the next value of the input iterator. If the iterator is exhausted,\n * throws a {@link StopIteration}, unless a <code>dflt</code> argument has been\n * specified, in which case the <code>dflt</code> argument is returned.\n *\n * @param {Iterator} iterator - The input iterator.\n * @param {any} [dflt=undefined] - The default value to return in the case\n * that the input iterator is exhausted.\n * @returns {any} The next value of the input iterator.\n */\nconst next = (iterator, dflt = undefined) => {\n\tconst x = _next(iterator);\n\n\tif (x.done) {\n\t\tif (dflt === undefined) {\n\t\t\tthrow new StopIteration();\n\t\t} else {\n\t\t\treturn dflt;\n\t\t}\n\t}\n\n\treturn x.value;\n};\n\nexport default next;\n"],"names":["_next","iterator","next","dflt","x","done","undefined","StopIteration","value"],"mappings":"iHAMMA,MAAAA,EAASC,GAAaA,EAASC,OCO/BA,EAAO,CAACD,EAAUE,KACvB,MAAMC,EAAIJ,EAAMC,GAEhB,GAAIG,EAAEC,KAAM,CACX,QAAaC,IAATH,EACH,UAAUI,EAEV,OAAOJ,EAIT,OAAOC,EAAEI"}